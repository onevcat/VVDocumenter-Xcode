<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>vv_isObjCMethod</key>
	<array>
		<dict>
			<key>source</key>
			<string>- (id)initWithDuration:(CFTimeInterval)duration sourceRect:(CGRect)sourceRect {</string>
			<key>uniform</key>
			<string>-(id)initWithDuration:(CFTimeInterval)duration sourceRect:(CGRect)sourceRect {</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param duration   &lt;#duration description#&gt;
 *  @param sourceRect &lt;#sourceRect description#&gt;
 *
 *  @return &lt;#return value description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>   -    (BOOL) application: (UIApplication *) application
 didFinishLaunchingWithOptions: (NSDictionary *) launchOptions;</string>
			<key>uniform</key>
			<string>   -(BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions;</string>
			<key>result</key>
			<string>   /**
    *  &lt;#Description#&gt;
    *
    *  @param application   &lt;#application description#&gt;
    *  @param launchOptions &lt;#launchOptions description#&gt;
    *
    *  @return &lt;#return value description#&gt;
    */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>+ (ADTransition *)nullTransition;</string>
			<key>uniform</key>
			<string>+(ADTransition *)nullTransition;</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @return &lt;#return value description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>-(void)whenLinked:(void (^)(void))actionHandler</string>
			<key>uniform</key>
			<string>-(void)whenLinked:(void(^)(void))actionHandler</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param actionHandler &lt;#actionHandler description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>-(void) writeMediasetJSON: (void (^)(void)) uploadCompletionBlock{}</string>
			<key>uniform</key>
			<string>-(void)writeMediasetJSON:(void(^)(void))uploadCompletionBlock{}</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param uploadCompletionBlock &lt;#uploadCompletionBlock description#&gt;
 */</string>
		</dict>
        <dict>
            <key>source</key>
            <string>-(void) createNewMediaset:(NSString *) collectionName withCompletionBlock: (void (^)(void)) completionBlock;</string>
            <key>uniform</key>
            <string>-(void)createNewMediaset:(NSString *)collectionName withCompletionBlock:(void(^)(void))completionBlock;</string>
            <key>result</key>
            <string>/**
 *  &lt;#Description#&gt;
 *
 *  @param collectionName  &lt;#collectionName description#&gt;
 *  @param completionBlock &lt;#completionBlock description#&gt;
 */</string>
        </dict>
	</array>
	<key>vv_isCFunction</key>
	<array>
		<dict>
			<key>source</key>
			<string>int square(int n) __attribute__((const));</string>
			<key>uniform</key>
			<string>int square(int n)__attribute__((const));</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param n &lt;#n description#&gt;
 *
 *  @return &lt;#return value description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>void dosomething ( int x, int  y );</string>
			<key>uniform</key>
			<string>void dosomething( int x, int  y );</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param x &lt;#x description#&gt;
 *  @param y &lt;#y description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>int main(int argc, char *argv[]) 
 {</string>
			<key>uniform</key>
			<string>int main(int argc, char *argv[]){</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param argc &lt;#argc description#&gt;
 *  @param argv &lt;#argv description#&gt;
 *
 *  @return &lt;#return value description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>void  NoParamFunc();</string>
			<key>uniform</key>
			<string>void  NoParamFunc();</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>typedef void(^IBLShareSuccessBlock)(ShareType type, SSPublishContentState state, id&lt;ISSStatusInfo&gt; statusInfo, BOOL end);</string>
			<key>uniform</key>
			<string>typedef void(^IBLShareSuccessBlock)(ShareType type, SSPublishContentState state, id&lt;ISSStatusInfo&gt; statusInfo, BOOL end);</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param type       &lt;#type description#&gt;
 *  @param state      &lt;#state description#&gt;
 *  @param statusInfo &lt;#statusInfo description#&gt;
 *  @param end        &lt;#end description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>typedef NSURL * (^AFURLSessionDownloadTaskDidFinishDownloadingBlock)(NSURLSession *session, NSURLSessionDownloadTask *downloadTask, NSURL *location);</string>
			<key>uniform</key>
			<string>typedef NSURL *(^AFURLSessionDownloadTaskDidFinishDownloadingBlock)(NSURLSession *session, NSURLSessionDownloadTask *downloadTask, NSURL *location);</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param session      &lt;#session description#&gt;
 *  @param downloadTask &lt;#downloadTask description#&gt;
 *  @param location     &lt;#location description#&gt;
 *
 *  @return &lt;#return value description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>typedef void (^AFURLSessionDownloadTaskDidResumeBlock)(NSURLSession *session, NSURLSessionDownloadTask *downloadTask, int64_t fileOffset, int64_t expectedTotalBytes);</string>
			<key>uniform</key>
			<string>typedef void(^AFURLSessionDownloadTaskDidResumeBlock)(NSURLSession *session, NSURLSessionDownloadTask *downloadTask, int64_t fileOffset, int64_t expectedTotalBytes);</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param session            &lt;#session description#&gt;
 *  @param downloadTask       &lt;#downloadTask description#&gt;
 *  @param fileOffset         &lt;#fileOffset description#&gt;
 *  @param expectedTotalBytes &lt;#expectedTotalBytes description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>typedef void (^HelloBlock)(void);</string>
			<key>uniform</key>
			<string>typedef void(^HelloBlock)(void);</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>virtual void run(RegridMethod method, int timeLevel, const RLLVelocityField &amp;f, const SpaceCoord &amp;x, SphereVelocity &amp;y, RLLMeshIndex *idx = NULL);</string>
			<key>uniform</key>
			<string>virtual void run(RegridMethod method, int timeLevel, const RLLVelocityField &amp;f, const SpaceCoord &amp;x, SphereVelocity &amp;y, RLLMeshIndex *idx = NULL);</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param method    &lt;#method description#&gt;
 *  @param timeLevel &lt;#timeLevel description#&gt;
 *  @param f         &lt;#f description#&gt;
 *  @param x         &lt;#x description#&gt;
 *  @param y         &lt;#y description#&gt;
 *  @param idx       &lt;#idx description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>void print2DList(int rowCount, int (*p)[10]);</string>
			<key>uniform</key>
			<string>void print2DList(int rowCount, int(*p)[10]);</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param rowCount &lt;#rowCount description#&gt;
 *  @param p        &lt;#p description#&gt;
 */</string>
		</dict>
	</array>
	<key>vv_isProperty</key>
	<array>
		<dict>
			<key>source</key>
			<string>@property (nonatomic, copy ) NSString *code;</string>
			<key>uniform</key>
			<string>@property(nonatomic, copy )NSString *code;</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>    @property ( nonatomic, strong ) Miao* test;</string>
			<key>uniform</key>
			<string>    @property( nonatomic, strong )Miao* test;</string>
			<key>result</key>
			<string>    /**
     *  &lt;#Description#&gt;
     */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>@property ( assign, strong ) int test;</string>
			<key>uniform</key>
			<string>@property( assign, strong )int test;</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 */</string>
		</dict>
	</array>
	<key>vv_isMacro</key>
	<array>
		<dict>
			<key>source</key>
			<string>#define MAX(A,B)	({</string>
			<key>uniform</key>
			<string>#define MAX(A,B)({</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param A &lt;#A description#&gt;
 *  @param B &lt;#B description#&gt;
 *
 *  @return &lt;#return value description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>#define MIN(A,B)	((A) &lt; (B) ? (A) : (B))</string>
			<key>uniform</key>
			<string>#define MIN(A,B)((A)&lt;(B)?(A):(B))</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param A &lt;#A description#&gt;
 *  @param B &lt;#B description#&gt;
 *
 *  @return &lt;#return value description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>#define ABS(A)	((A) &lt; 0 ? (-(A)) : (A))</string>
			<key>uniform</key>
			<string>#define ABS(A)((A)&lt; 0 ?(-(A)):(A))</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 *
 *  @param A &lt;#A description#&gt;
 *
 *  @return &lt;#return value description#&gt;
 */</string>
		</dict>
	</array>
	<key>vv_isStruct</key>
	<array>
		<dict>
			<key>source</key>
			<string>struct Foo 
 {</string>
			<key>uniform</key>
			<string>struct Foo {</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>   struct node {</string>
			<key>uniform</key>
			<string>   struct node {</string>
			<key>result</key>
			<string>   /**
    *  &lt;#Description#&gt;
    */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>struct objc_object {</string>
			<key>uniform</key>
			<string>struct objc_object {</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 */</string>
		</dict>
	</array>
	<key>vv_isEnum</key>
	<array>
		<dict>
			<key>source</key>
			<string>typedef NS_ENUM(NSInteger, SIAlertViewBackgroundStyle) {
    SIAlertViewBackgroundStyleGradient = 0,
    SIAlertViewBackgroundStyleSolid,
};</string>
			<key>uniform</key>
			<string>typedef NS_ENUM(NSInteger, SIAlertViewBackgroundStyle){ SIAlertViewBackgroundStyleGradient = 0, SIAlertViewBackgroundStyleSolid, };</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 */
typedef NS_ENUM(NSInteger, SIAlertViewBackgroundStyle) {
/**
 *  &lt;#Description#&gt;
 */
SIAlertViewBackgroundStyleGradient = 0,
/**
 *  &lt;#Description#&gt;
 */
SIAlertViewBackgroundStyleSolid,
};</string>
		</dict>
	</array>
	<key>vv_isComplieKeyword</key>
	<array>
		<dict>
			<key>source</key>
			<string>@interface VVDocumenter : NSObject 
 {</string>
			<key>uniform</key>
			<string>@interface VVDocumenter : NSObject {</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>@interface VVDocumenter : NSObject 
 {</string>
			<key>uniform</key>
			<string>@interface VVDocumenter : NSObject {</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>@interface SyntaxTests()
@property (nonatomic, retain) NSArray* inputs;</string>
			<key>uniform</key>
			<string>@interface SyntaxTests()@property(nonatomic, retain)NSArray* inputs;</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>@implementation SyntaxTests

- (void)setUp
{</string>
			<key>uniform</key>
			<string>@implementation SyntaxTests -(void)setUp {</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>@interface A (a)
- (id) foo;</string>
			<key>uniform</key>
			<string>@interface A(a)-(id)foo;</string>
			<key>result</key>
			<string>/**
 *  &lt;#Description#&gt;
 */</string>
		</dict>
	</array>
	<key>vv_isSwiftFunction</key>
	<array>
        <dict>
            <key>source</key>
            <string>func testParasType(var a: Int, let b: Int, inout c: Int, d: Int) {</string>
            <key>uniform</key>
            <string>func testParasType(var a: Int, let b: Int, inout c: Int, d: Int){</string>
            <key>result</key>
            <string>/**
 &lt;#Description#&gt;

 - parameter a: &lt;#a description#&gt;
 - parameter b: &lt;#b description#&gt;
 - parameter c: &lt;#c description#&gt;
 - parameter d: &lt;#d description#&gt;
 */</string>
        </dict>
		<dict>
			<key>source</key>
			<string>func sayHello(personName: String) -&gt; String  {</string>
			<key>uniform</key>
			<string>func sayHello(personName: String)-&gt; String  {</string>
			<key>result</key>
			<string>/**
 &lt;#Description#&gt;

 - parameter personName: &lt;#personName description#&gt;

 - returns: &lt;#return value description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>func go(para: Int -&gt; String) -&gt; (String -&gt; String) {</string>
			<key>uniform</key>
			<string>func go(para: Int -&gt; String)-&gt;(String -&gt; String){</string>
			<key>result</key>
			<string>/**
 &lt;#Description#&gt;

 - parameter para: &lt;#para description#&gt;

 - returns: &lt;#return value description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>public func go (miao: Int, wu: String) -&gt; Void {</string>
			<key>uniform</key>
			<string>public func go(miao: Int, wu: String)-&gt; Void {</string>
			<key>result</key>
			<string>/**
 &lt;#Description#&gt;

 - parameter miao: &lt;#miao description#&gt;
 - parameter wu:   &lt;#wu description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>init(style: Style, _ gearing: Gearing, #handlebar: Handlebar, frameSize centimeters: Int = 1) {</string>
			<key>uniform</key>
			<string>init(style: Style, _ gearing: Gearing, #handlebar: Handlebar, frameSize centimeters: Int = 1){</string>
			<key>result</key>
			<string>/**
 &lt;#Description#&gt;

 - parameter style:       &lt;#style description#&gt;
 - parameter gearing:     &lt;#gearing description#&gt;
 - parameter handlebar:   &lt;#handlebar description#&gt;
 - parameter centimeters: &lt;#centimeters description#&gt;

 - returns: &lt;#return value description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>func Test(input : Int, condition : (Int, String) -&gt; Bool = {(t: Int,k: String) in return true}) -&gt; (Int,Int) {</string>
			<key>uniform</key>
			<string>func Test(input : Int, condition :(Int, String)-&gt; Bool = {(t: Int,k: String)in return true})-&gt;(Int,Int){</string>
			<key>result</key>
			<string>/**
 &lt;#Description#&gt;

 - parameter input:     &lt;#input description#&gt;
 - parameter condition: &lt;#condition description#&gt;

 - returns: &lt;#return value description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>func URLSession(session: NSURLSession!, task: NSURLSessionTask!, didReceiveChallenge challenge: NSURLAuthenticationChallenge!, completionHandler: ((NSURLSessionAuthChallengeDisposition, NSURLCredential!) -&gt; Void)!) {</string>
			<key>uniform</key>
			<string>func URLSession(session: NSURLSession!, task: NSURLSessionTask!, didReceiveChallenge challenge: NSURLAuthenticationChallenge!, completionHandler:((NSURLSessionAuthChallengeDisposition, NSURLCredential!)-&gt; Void)!){</string>
			<key>result</key>
			<string>/**
 &lt;#Description#&gt;

 - parameter session:           &lt;#session description#&gt;
 - parameter task:              &lt;#task description#&gt;
 - parameter challenge:         &lt;#challenge description#&gt;
 - parameter completionHandler: &lt;#completionHandler description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>func makeTuple(a:Int, b:Int, c:Int) -&gt; (sum:Int, product:Int, max:Int) {</string>
			<key>uniform</key>
			<string>func makeTuple(a:Int, b:Int, c:Int)-&gt;(sum:Int, product:Int, max:Int){</string>
			<key>result</key>
			<string>/**
 &lt;#Description#&gt;

 - parameter a: &lt;#a description#&gt;
 - parameter b: &lt;#b description#&gt;
 - parameter c: &lt;#c description#&gt;

 - returns: &lt;#return value description#&gt;
 */</string>
		</dict>
        <dict>
            <key>source</key>
            <string>public subscript (key: KeyType) -> ValueType? {</string>
            <key>uniform</key>
            <string>public subscript(key: KeyType)-> ValueType? {</string>
            <key>result</key>
            <string>/**
 &lt;#Description#&gt;

 - parameter key: &lt;#key description#&gt;

 - returns: &lt;#return value description#&gt;
 */</string>
        </dict>
        <dict>
            <key>source</key>
            <string>func getSomething(input:String?, success: (Int) -> Void, failure: (NSHTTPURLResponse?, AnyObject?, NSError?) -> Void) {</string>
            <key>uniform</key>
            <string>func getSomething(input:String?, success:(Int)-> Void, failure:(NSHTTPURLResponse?, AnyObject?, NSError?)-> Void){</string>
            <key>result</key>
            <string>/**
 &lt;#Description#&gt;

 - parameter input:   &lt;#input description#&gt;
 - parameter success: &lt;#success description#&gt;
 - parameter failure: &lt;#failure description#&gt;
 */</string>
        </dict>
        <dict>
            <key>source</key>
            <string>func methodCouldThrows(count: Int) throws -> Int {</string>
            <key>uniform</key>
            <string>func methodCouldThrows(count: Int)throws -> Int {</string>
            <key>result</key>
            <string>/**
 &lt;#Description#&gt;

 - parameter count: &lt;#count description#&gt;

 - throws: &lt;#throws value description#&gt;

 - returns: &lt;#return value description#&gt;
 */</string>
        </dict>
        <dict>
            <key>source</key>
            <string>func methodCouldThrows() throws {</string>
            <key>uniform</key>
            <string>func methodCouldThrows()throws {</string>
            <key>result</key>
            <string>/**
 &lt;#Description#&gt;

 - throws: &lt;#throws value description#&gt;
 */</string>
        </dict>
        <dict>
            <key>source</key>
            <string>func methodCouldThrows(count: Int, name: String, f: (Int, String) throws -> Void) rethrows -> Int {</string>
            <key>uniform</key>
            <string>func methodCouldThrows(count: Int, name: String, f:(Int, String)throws -> Void)rethrows -> Int {</string>
            <key>result</key>
            <string>/**
 &lt;#Description#&gt;

 - parameter count: &lt;#count description#&gt;
 - parameter name:  &lt;#name description#&gt;
 - parameter f:     &lt;#f description#&gt;

 - throws: &lt;#throws value description#&gt;

 - returns: &lt;#return value description#&gt;
 */</string>
        </dict>
        <dict>
            <key>source</key>
            <string>public class func amethod(count: Int) -> Int? {</string>
            <key>uniform</key>
            <string>public class func amethod(count: Int)-> Int? {</string>
            <key>result</key>
            <string>/**
 &lt;#Description#&gt;

 - parameter count: &lt;#count description#&gt;

 - returns: &lt;#return value description#&gt;
 */</string>
        </dict>
        <dict>
            <key>source</key>
            <string>func testTuple(aTuple: (first: String, second: String, third: String)) -> (first: String, second: String, third: String)? {</string>
            <key>uniform</key>
            <string>func testTuple(aTuple:(first: String, second: String, third: String))->(first: String, second: String, third: String)? {</string>
            <key>result</key>
            <string>/**
 &lt;#Description#&gt;

 - parameter aTuple: &lt;#aTuple description#&gt;

 - returns: &lt;#return value description#&gt;
 */</string>
        </dict>
	</array>
	<key>vv_isSwiftEnum</key>
	<array>
		<dict>
			<key>source</key>
			<string>enum Handlebar {
    case Riser, Café, Drop, Bullhorn
}</string>
			<key>uniform</key>
			<string>enum Handlebar { case Riser, Café, Drop, Bullhorn }</string>
			<key>result</key>
			<string>/**
 &lt;#Description#&gt;

 - Riser:    &lt;#Riser description#&gt;
 - Café:     &lt;#Café description#&gt;
 - Drop:     &lt;#Drop description#&gt;
 - Bullhorn: &lt;#Bullhorn description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>public enum Gearing {
    case Fixed
    case Freewheel(speeds: Int)
}</string>
			<key>uniform</key>
			<string>public enum Gearing { case Fixed case Freewheel(speeds: Int)}</string>
			<key>result</key>
			<string>/**
 &lt;#Description#&gt;

 - Fixed:     &lt;#Fixed description#&gt;
 - Freewheel: &lt;#Freewheel description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>enum ASCIIControlCharacter: Character {
    case Tab = &quot;\t&quot;
    case LineFeed = &quot;\n&quot;
    case CarriageReturn = &quot;\r&quot;
}</string>
			<key>uniform</key>
			<string>enum ASCIIControlCharacter: Character { case Tab = &quot;\t&quot; case LineFeed = &quot;\n&quot; case CarriageReturn = &quot;\r&quot; }</string>
			<key>result</key>
			<string>/**
 &lt;#Description#&gt;

 - Tab:            &lt;#Tab description#&gt;
 - LineFeed:       &lt;#LineFeed description#&gt;
 - CarriageReturn: &lt;#CarriageReturn description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>enum Planet: Int {
    case Mercury = 1, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune
}</string>
			<key>uniform</key>
			<string>enum Planet: Int { case Mercury = 1, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune }</string>
			<key>result</key>
			<string>/**
 &lt;#Description#&gt;

 - Mercury: &lt;#Mercury description#&gt;
 - Venus:   &lt;#Venus description#&gt;
 - Earth:   &lt;#Earth description#&gt;
 - Mars:    &lt;#Mars description#&gt;
 - Jupiter: &lt;#Jupiter description#&gt;
 - Saturn:  &lt;#Saturn description#&gt;
 - Uranus:  &lt;#Uranus description#&gt;
 - Neptune: &lt;#Neptune description#&gt;
 */</string>
		</dict>
		<dict>
			<key>source</key>
			<string>enum Barcode {
    case UPCA(Int, Int, Int, Int)
    case QRCode(String)
}</string>
			<key>uniform</key>
			<string>enum Barcode { case UPCA(Int, Int, Int, Int)case QRCode(String)}</string>
			<key>result</key>
			<string>/**
 &lt;#Description#&gt;

 - UPCA:   &lt;#UPCA description#&gt;
 - QRCode: &lt;#QRCode description#&gt;
 */</string>
		</dict>
	</array>
	<key>vv_isSwiftProperty</key>
	<array>
		<dict>
			<key>source</key>
			<string>let handlebar: Handlebar</string>
			<key>uniform</key>
			<string>let handlebar: Handlebar</string>
			<key>result</key>
			<string>/// &lt;#Description#&gt;</string>
		</dict>
	</array>
	<key>vv_isSwiftExtension</key>
	<array>
		<dict>
			<key>source</key>
			<string>extension MyClass: SomeDelegate {</string>
			<key>uniform</key>
			<string>extension MyClass: SomeDelegate {</string>
			<key>result</key>
			<string>// MARK: - &lt;#SomeDelegate#&gt;</string>
		</dict>
        <dict>
            <key>source</key>
            <string>private extension MyClass\n {</string>
            <key>uniform</key>
            <string>private extension MyClass\n {</string>
            <key>result</key>
            <string>// MARK: - &lt;#Description#&gt;</string>
        </dict>
	</array>
</dict>
</plist>
